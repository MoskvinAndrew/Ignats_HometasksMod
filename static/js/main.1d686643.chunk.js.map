{"version":3,"sources":["common/Navigation/N.module.css","common/button/B.module.css","common/JuniorsFolder/Junior.module.css","common/Hometask8/H.module.css","common/3Hometask/ThirdHometask.module.css","common/input/inputNew.module.css","common/checkBox/C.module.css","common/EditableSpan/ES.module.css","common/input/inputNew.tsx","common/button/Button.tsx","common/3Hometask/Third-Hometask.tsx","common/checkBox/CheckBox.tsx","common/JuniorsFolder/PreJunior.tsx","common/EditableSpan/EditableSpan.tsx","common/Radio/radio.tsx","common/Select/Select.tsx","redusers/homeWorkReducer.tsx","common/Hometask8/homeTask8.tsx","common/JuniorsFolder/Junior.tsx","common/helpers.ts","common/JuniorsFolder/Junior+.tsx","common/Navigation/Navigation.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","InputNew","props","className","error","s","inputNya","errorStyle","value","nNew","onKeyPress","e","charCode","onKeyPressHandler","onEnter","onChange","onChangeHandler","onBlur","offEditMode","autoFocus","ButtonNew","typeofButton","B","box1","box11","btn","btnone","onClick","name","ThirdHometask","TH","inputContainer","setnNew","Button","counter","span","newArr","length","CheckBoxNew","C","chekboxtwo","checkbox","type","checked","checkbox__icon","PreJunior","NewElemInNewArr","console","log","CheckBox","EditableSpan","useState","editMode","setEditMode","settitle","title","currentTarget","ES","editableSpan","onDoubleClick","Radio","onStatusChangeHandler","newIsDoneValue","id","onRadioChange","inputs","map","i","key","item","htmlFor","SelectComponent","option","v","digit","Select","parentValue","event","selectValue","onSelectChange","testReducerArray","v1","age","hwReducer","state","action","payload","sort","a","b","newArray","filter","sortPeoplesAC","HomeTask8","useReducer","peoples","dispatchToPeoples","arrayOfGuys","H","homeTaskcontainer","namesContainer","buttonsContainer","Junior","ArrayForSelect","ArrayForRadio","isChecked","setParentValue","J","buttonsBlock","stateAsString","JSON","stringify","localStorage","setItem","saveState","defaultState","getItem","parse","restoreState","Sevenand8TaskContainer","hometaskSeven","selectComponent","find","radioComponent","choseValue","JuniorPlus","Navigation","N","dropdown","dropbtn","dropdown_content","accordion","activeClassName","active","to","App","setErr","setnewArr","newElement","alert","exact","path","render","Boolean","window","location","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.1d686643.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dropbtn\":\"N_dropbtn__1hqvr\",\"dropdown\":\"N_dropdown__2zCRT\",\"dropdown_content\":\"N_dropdown_content__3okKJ\",\"accordion\":\"N_accordion__3zhSK\",\"active\":\"N_active__9PbHw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"box1\":\"B_box1__2MNwT\",\"box11\":\"B_box11__WFYei\",\"btn\":\"B_btn__2SJSa\",\"btnone\":\"B_btnone__1Qoon\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"buttonsBlock\":\"Junior_buttonsBlock___3oYH\",\"selectComponent\":\"Junior_selectComponent__20cjE\",\"radioComponent\":\"Junior_radioComponent__Gs1aH\",\"hometaskSeven\":\"Junior_hometaskSeven__1vk3K\",\"Sevenand8TaskContainer\":\"Junior_Sevenand8TaskContainer__2SB-M\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"homeTaskcontainer\":\"H_homeTaskcontainer__28euw\",\"buttonsContainer\":\"H_buttonsContainer__1nlQK\",\"namesContainer\":\"H_namesContainer__3ixPl\",\"title\":\"H_title__2JotN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"inputContainer\":\"ThirdHometask_inputContainer__3LUfn\",\"Wrapp\":\"ThirdHometask_Wrapp__3vzIF\",\"message\":\"ThirdHometask_message__14_iI\",\"input\":\"ThirdHometask_input__2nIC_\",\"addButton\":\"ThirdHometask_addButton__OqySA\",\"span\":\"ThirdHometask_span__3CZPz\",\"counter\":\"ThirdHometask_counter__20cjX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"inputNya\":\"inputNew_inputNya__mo3NI\",\"span\":\"inputNew_span__2EjjU\",\"errorStyle\":\"inputNew_errorStyle__3Wrwr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"chekboxtwo\":\"C_chekboxtwo__2cilK\",\"checkbox\":\"C_checkbox__uEHi8\",\"checkbox__icon\":\"C_checkbox__icon__3QT33\",\"icon--check\":\"C_icon--check__JFGAE\",\"icon--check-empty\":\"C_icon--check-empty__1xhzU\",\"chekbox-two\":\"C_chekbox-two__3b0ks\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"editableSpan\":\"ES_editableSpan__lcw_6\"};","import React, {\r\n    ButtonHTMLAttributes,\r\n    ChangeEvent,\r\n    DetailedHTMLProps,\r\n    InputHTMLAttributes,\r\n    KeyboardEvent,\r\n    useState\r\n} from 'react';\r\nimport s from './inputNew.module.css';\r\nimport {AppTypes} from \"../../App\";\r\n\r\n\r\nexport type InputNyaTypes = {\r\n\r\n    nNew?: string,\r\n    newArr?: Array<AppTypes>,\r\n    onChangeHandler?: (e: ChangeEvent<HTMLInputElement>) => void,\r\n    onKeyPressHandler?: (e: KeyboardEvent<HTMLInputElement>) => void,\r\n    setnNew?: (value: string) => void,\r\n    onEnter?: () => void,\r\n    error?: string | null,\r\n    autoFocus:boolean,\r\n    onBlur?:()=>void,\r\n    offEditMode?:()=>void,\r\n};\r\n\r\n\r\nfunction InputNew(props: InputNyaTypes) {\r\n\r\n    let onKeyPressHandler = (e: KeyboardEvent<HTMLInputElement>) => {\r\n        if (e.charCode === 13) {\r\n            props.onKeyPressHandler && props.onKeyPressHandler(e)\r\n            props.onEnter && props.onEnter()\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <input className={props.error !== \" \" ? s.inputNya : s.inputNya + \" \" + s.errorStyle}\r\n                   value={props.nNew}\r\n                   onKeyPress={onKeyPressHandler}\r\n                   onChange={props.onChangeHandler}\r\n                   onBlur={props.offEditMode}\r\n                   autoFocus={true}/>\r\n\r\n\r\n        </>\r\n\r\n    )\r\n}\r\n\r\nexport default InputNew;","import React, {ButtonHTMLAttributes, DetailedHTMLProps} from \"react\";\r\nimport B from \"./B.module.css\"\r\nimport ThirdHometask from \"../3Hometask/Third-Hometask\";\r\n\r\n\r\n\r\nexport type ButtonNewTypes = {\r\n    name:string,\r\n    typeofButton?:boolean,\r\n    onClick:()=>void,\r\n\r\n\r\n\r\n\r\n}\r\n\r\n\r\nfunction ButtonNew(props: ButtonNewTypes) {\r\n\r\n\r\n    return (\r\n        <div className={props.typeofButton?B.box1 +\" \"+B.box11:B.box1}>\r\n            <div className={B.btn + ' ' + B.btnone} onClick={props.onClick} >\r\n                <span>{props.name}</span>\r\n            </div>\r\n        </div>)\r\n}\r\n\r\nexport default ButtonNew;","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes, KeyboardEvent, useState} from 'react';\nimport TH from \"./ThirdHometask.module.css\";\nimport {AppTypes} from \"../../App\";\nimport InputNew from \"../input/inputNew\";\nimport ButtonNew from \"../button/Button\";\n\n\n\n\ntype ThirdHometaskTypes = {\n    nNew: string,\n    newArr: Array<AppTypes>,\n    onChangeHandler: (e: ChangeEvent<HTMLInputElement>) => void,\n    onKeyPressHandler: (e: KeyboardEvent<HTMLInputElement>) => void,\n    typeofButton:boolean,\n    setnNew:(value:string)=>void,\n    error?:string|null,\n    NewElemInNewArr:(name:string)=>void,\n    onClick:()=>void,\n\n\n}\n\n\nfunction ThirdHometask(props: ThirdHometaskTypes) {\n\n    return (\n        <div className={TH.inputContainer}>\n            <InputNew\n                autoFocus={true}\n                error={props.error}\n                setnNew={props.setnNew}\n                nNew={props.nNew}\n                onChangeHandler={props.onChangeHandler}\n                onKeyPressHandler={props.onKeyPressHandler}\n            />\n\n            <ButtonNew\n                        name={\"ADD\"}\n                        typeofButton={props.typeofButton}\n                        onClick={props.onClick}/>\n\n            <div className={TH.counter}><p>Обьектов в массиве:</p>\n                <span className={TH.span}>{props.newArr.length}</span>\n\n            </div>\n\n        </div>\n    )\n}\n\nexport default ThirdHometask;","import React, {ButtonHTMLAttributes, DetailedHTMLProps} from \"react\";\r\nimport C from \"./C.module.css\"\r\n\r\ntype CheckBoxNewTypes = {\r\n\r\n}\r\n\r\nfunction CheckBoxNew(props: CheckBoxNewTypes) {\r\n    return <div className={C.chekboxtwo}>\r\n        <label className={C.checkbox}>\r\n            <input type=\"checkbox\" checked />\r\n            <span className={C.checkbox__icon}></span>\r\n\r\n        </label>\r\n    </div>\r\n}\r\n\r\n\r\nexport default CheckBoxNew;","import React, {ChangeEvent, KeyboardEvent} from 'react';\r\nimport ThirdHometask from \"../3Hometask/Third-Hometask\";\r\nimport InputNew from \"../input/inputNew\";\r\nimport ButtonNew from \"../button/Button\";\r\nimport CheckBoxNew from \"../checkBox/CheckBox\";\r\nimport {AppTypes} from \"../../App\";\r\nimport PJ from \"./PJ.module.css\";\r\nimport EditableSpan from \"../EditableSpan/EditableSpan\";\r\n\r\ntype PreJunior = {\r\n    nNew: string,\r\n    newArr: Array<AppTypes>,\r\n    onChangeHandler: (e: ChangeEvent<HTMLInputElement>) => void,\r\n    onKeyPressHandler: (e: KeyboardEvent<HTMLInputElement>) => void,\r\n    typeofButton:boolean,\r\n    setnNew:(value:string)=>void,\r\n    error?:string|null,\r\n    onEnter:()=>void,\r\n    NewElemInNewArr:(name:string)=>void,\r\n    onClick:()=>void,\r\n\r\n}\r\n\r\nfunction PreJunior(props:PreJunior){\r\n    return(\r\n        <div>\r\n            <ThirdHometask\r\n                nNew={props.nNew}\r\n                newArr={props.newArr}\r\n                onKeyPressHandler={props.onKeyPressHandler}\r\n                onChangeHandler={props.onChangeHandler}\r\n                typeofButton={false}\r\n                setnNew={props.setnNew}\r\n                error={props.error}\r\n                NewElemInNewArr={props.NewElemInNewArr}\r\n                onClick={props.onClick}\r\n\r\n\r\n            />\r\n\r\n            <div className=\"wrapperForNew\">\r\n                <InputNew\r\n                    autoFocus={true}\r\n                    onKeyPressHandler={props.onKeyPressHandler}\r\n                    onEnter={props.onEnter}\r\n                    setnNew={props.setnNew}\r\n                />\r\n                <ButtonNew\r\n                    name={\"Моя кнопка\"}\r\n                    typeofButton={true}\r\n                    onClick={()=>console.log(\"sdf\")}\r\n                    />\r\n\r\n                <CheckBoxNew/>\r\n\r\n\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PreJunior;","import React, {ChangeEvent, useState} from 'react';\r\nimport InputNew from \"../input/inputNew\";\r\nimport ES from \"./ES.module.css\"\r\n\r\n\r\n\r\ntype EditableSpanType={\r\n    title:string;\r\n    settitle:(title:string)=>void,\r\n}\r\n\r\nfunction EditableSpan (props:EditableSpanType){\r\n\r\n\r\n\r\n\r\n    let [editMode,setEditMode]=useState(false);\r\n\r\n    // let [title,settitle]=useState<string>(\"Кликни на мне 2 раза\")\r\n\r\n    const onEditMode = ()=>{\r\n        setEditMode(true);\r\n    }\r\n    const offEditMode = ()=>{\r\n        setEditMode(false);\r\n        props.settitle(props.title);\r\n    }\r\n\r\n    const changeTitle = (e: ChangeEvent<HTMLInputElement>)=>{\r\n        props.settitle(e.currentTarget.value)\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n    return editMode\r\n        ? <InputNew\r\n            autoFocus={true}\r\n            onBlur={offEditMode}\r\n            onKeyPressHandler={offEditMode}\r\n            onChangeHandler={changeTitle}\r\n            offEditMode={offEditMode}/>:\r\n        <span className={ES.editableSpan} onDoubleClick={onEditMode}>{props.title}</span>}\r\n\r\n\r\n\r\n\r\n\r\nexport default EditableSpan;","import React, {ChangeEvent, RefObject} from 'react';\r\nimport {ArrayForRadio} from \"../JuniorsFolder/Junior\";\r\n\r\ntype RadioTypes={\r\n    value:Array<ArrayForRadio>,\r\n    onRadioChange:(id:string)=>void,\r\n    name:string\r\n\r\n}\r\n\r\n\r\nfunction Radio (props:RadioTypes){\r\n\r\n    // let radioButton = React.createRef<HTMLTextAreaElement>();\r\n\r\n let onStatusChangeHandler = (e:ChangeEvent<HTMLInputElement>)=>{\r\n     let newIsDoneValue = e.currentTarget.id;\r\n     props.onRadioChange(newIsDoneValue)\r\n }\r\n let inputs = props.value.map((i)=> <div>\r\n\r\n                                                <input type=\"radio\"\r\n                                                       key={i.id}\r\n                                                       name={props.name}\r\n                                                       id={i.id}\r\n                                                       value={i.item}\r\n                                                       onChange={onStatusChangeHandler}\r\n                                                />\r\n                                                       <label htmlFor={i.id}>{i.item}</label>\r\n                                                      </div>)\r\n\r\n\r\n\r\n\r\n    return(\r\n\r\n         <div>\r\n\r\n             <p>Выберите персонажа:</p>\r\n            {inputs}\r\n         \r\n         </div>\r\n     )\r\n }\r\nexport default Radio;","import React, {ChangeEvent, useState} from 'react';\r\nimport {ArrayForSelect} from \"../JuniorsFolder/Junior\";\r\nimport Select from '@material-ui/core/Select';\r\n\r\ntype SelectTypes={\r\n    onSelectChange:(selectValue:string)=>void,\r\n    value:Array<ArrayForSelect>\r\n    parentValue:string|undefined\r\n\r\n}\r\n\r\nfunction SelectComponent (props:SelectTypes){\r\n\r\n\r\n\r\n      let option = props.value.map(v=> <option key={v.id} value={v.digit}>{v.item}</option>);\r\n\r\n     let onChangeHandler = ((event: ChangeEvent<{ name?: string | undefined; value: unknown; }>)=>{\r\n       let selectValue = event.currentTarget.value;\r\n       // @ts-ignore\r\n         props.onSelectChange(selectValue)\r\n\r\n\r\n      })\r\n\r\n\r\n\r\n    return <Select value={props.parentValue} onChange={onChangeHandler}>\r\n            {option}\r\n        </Select>\r\n\r\n}\r\nexport default SelectComponent;\r\n\r\n"," import {v1} from \"uuid\";\r\n\r\n let SORT = 'SORT';\r\n let CHECK = 'CHECK';\r\n\r\n\r\n export type sortPeoplesACType = {\r\n     type:typeof SORT\r\n     payload:string\r\n }\r\n export type sortByAgeACType = {\r\n     type:typeof CHECK\r\n     payload:number\r\n }\r\n\r\n\r\n export type testReducerArrayTypes = {\r\n     id: string,\r\n    name: string,\r\n    age: number\r\n};\r\n\r\n type ActionsType = sortPeoplesACType|sortByAgeACType\r\n\r\nexport let testReducerArray = [\r\n    {id: v1(), name: 'Andrey', age: 28},\r\n    {id: v1(), name: 'Inat', age: 29},\r\n    {id: v1(), name: 'Dima', age: 30},\r\n    {id: v1(), name: 'Aleksandr', age: 17},\r\n    {id: v1(), name: 'Arsenii', age: 22},\r\n    {id: v1(), name: 'Kolya', age: 12},{id: v1(), name: 'Kolya', age: 12}];\r\n\r\n\r\n\r\n\r\nexport const hwReducer = (state: Array<testReducerArrayTypes>, action: ActionsType) => {\r\n\r\n    switch (action.type) {\r\n        case SORT:\r\n            if(action.payload == 'up'){\r\n\r\n                state.sort(function (a, b) {\r\n                     if (a.name > b.name) {\r\n                       return 1;\r\n                    }\r\n                     if (a.name < b.name) {\r\n                         return -1;\r\n                     }\r\n                     // a должно быть равным b\r\n                     return 0;\r\n                 });\r\n             }else if(action.payload == 'down'){\r\n                state.sort(function (a, b) {\r\n                    if (a.name < b.name) {\r\n                        return 1;\r\n                    }\r\n                    if (a.name > b.name) {\r\n                        return -1;\r\n                    }\r\n                    // a должно быть равным b\r\n                    return 0;\r\n                });\r\n            }\r\n                return [...state];\r\n\r\n        case CHECK:\r\n            if(action.type == 'CHECK' ){\r\n            let newArray =  state.filter(s => s.age > action.payload);\r\n            console.log(newArray);\r\n            return[...newArray];}\r\n\r\n\r\n    }\r\n\r\n        return [...state];\r\n    };\r\n\r\nexport const sortPeoplesAC = (payload:string):sortPeoplesACType =>({type: 'SORT', payload});\r\nexport const sortByAgeAC = (payload:number):sortByAgeACType =>({type: 'CHECK', payload});\r\n","import React, {useReducer} from \"react\";\r\nimport H from \"./H.module.css\";\r\nimport {hwReducer, sortByAgeAC, sortPeoplesAC, testReducerArray} from \"../../redusers/homeWorkReducer\";\r\nimport ButtonNew from \"../button/Button\";\r\n\r\n\r\nexport const HomeTask8 = ()=>{\r\n\r\n    let [peoples,dispatchToPeoples] = useReducer(hwReducer,testReducerArray)\r\n\r\n    let arrayOfGuys = peoples.map(a=> <p>Name: {a.name}, age: {a.age}</p> )\r\n\r\n    function sortPeoplesByNameUp () {\r\n        const action = sortPeoplesAC('up');\r\n        dispatchToPeoples(action);\r\n    };\r\n    function sortPeoplesByNameDown () {\r\n        const action = sortPeoplesAC('down');\r\n        dispatchToPeoples(action);\r\n    }\r\n    function filterPeoplesByAge () {\r\n        const action = sortByAgeAC(18);\r\n        dispatchToPeoples(action);\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    return<div className={H.homeTaskcontainer}>\r\n        <h2 className={H.title}>Восьмая домашка:</h2>\r\n       <div className={H.namesContainer}> {arrayOfGuys}</div>\r\n\r\n\r\n        <div className={H.buttonsContainer}>\r\n      <ButtonNew name={'SORT UP'}\r\n                  onClick={sortPeoplesByNameUp}/>\r\n        <ButtonNew name={'SORT DOWN'}\r\n                   onClick={sortPeoplesByNameDown}/>\r\n            <ButtonNew name={'FILTER'}\r\n                       onClick={filterPeoplesByAge}/>\r\n        </div>\r\n    </div>\r\n}","import React, {ChangeEvent, useState} from 'react';\r\nimport EditableSpan from \"../EditableSpan/EditableSpan\";\r\nimport J from \"./Junior.module.css\";\r\n\r\nimport ButtonNew from \"../button/Button\";\r\nimport {restoreState, saveState, StateType} from \"../helpers\";\r\nimport Select from \"../Select/Select\";\r\nimport {v1} from \"uuid\";\r\nimport Radio from \"../Radio/radio\";\r\nimport SelectComponent from \"../Select/Select\";\r\nimport {HomeTask8} from \"../Hometask8/homeTask8\";\r\n\r\nexport type ArrayForSelect = {\r\n    id: string,\r\n    item: string,\r\n    digit:string\r\n}\r\nexport type ArrayForRadio = {\r\n    id: string,\r\n    item: string\r\n    isChecked:boolean\r\n}\r\ntype JuniorTypes = {}\r\n\r\nfunction Junior(props: JuniorTypes) {\r\n    let ArrayForSelect = [{id: v1(), item: 'Чебурашка',digit: '1'},\r\n        {id: v1(), item: 'Крокодил Гена',digit: '2'},\r\n        {id: v1(), item: 'Шапокляк',digit: '3'},\r\n        {id: v1(), item: 'Крыса Лариса',digit: '4'}];\r\n    let ArrayForRadio = [{id: v1(), item: 'Чебурашка',isChecked:false},\r\n        {id: v1(), item: 'Крокодил Гена',isChecked:false},\r\n        {id: v1(), item: 'Шапокляк',isChecked:false},\r\n        {id: v1(), item: 'Крыса Лариса',isChecked:false}];\r\n\r\n\r\n    let [title, settitle] = useState<string>(\"Кликни на мне 2 раза\");\r\n\r\n    // let [radioValue,setRadioValue] = useState<ArrayForRadio>(ArrayForRadio[2]);\r\n    // let OnChange = ()=>{\r\n    //\r\n    // }\r\n\r\n    let [parentValue, setParentValue] = useState<string | undefined>('1');\r\n\r\n    let  onSelectChange = (selectValue:string)=>{\r\n        let a = ArrayForSelect.find(a=>a.item == selectValue);\r\n        if(a){\r\n        setParentValue(a.digit)};\r\n    }\r\n    const onRadioChange = (id:string)=>{\r\n      let choseValue = ArrayForRadio.find(e=>e.id == id) ;\r\n      if(choseValue){\r\n          choseValue.isChecked = true;\r\n          console.log(choseValue)\r\n      }\r\n\r\n    }\r\n\r\n\r\n    const saveClick = () => {\r\n        saveState<StateType>(\"test\", {value: title});\r\n    }\r\n    const restoreTitle = () => {\r\n        const state: StateType = restoreState<StateType>(\"test\", {value: ''});\r\n\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <div>\r\n            <EditableSpan title={title}\r\n                          settitle={settitle}/>\r\n            <div className={J.buttonsBlock}>\r\n                <ButtonNew name={\"Сохранить\"}\r\n                           typeofButton={true}\r\n                           onClick={saveClick}\r\n\r\n                />\r\n                <ButtonNew name={\"Воcстановить\"}\r\n                           typeofButton={false}\r\n                           onClick={restoreTitle}/>\r\n            </div>\r\n\r\n<div className={J. Sevenand8TaskContainer}>\r\n            <div className={J.hometaskSeven}>\r\n\r\n                <h2>Седьмая домашка:</h2>\r\n\r\n                <div className={J.selectComponent}>\r\n            <SelectComponent value={ArrayForSelect}\r\n                             onSelectChange={onSelectChange}\r\n                    parentValue={parentValue}/>\r\n                </div>\r\n                <div className={J.radioComponent}>\r\n            <Radio  value={ArrayForRadio}\r\n            name={\"HomeTask\"}\r\n                    onRadioChange={onRadioChange}/>\r\n        </div>\r\n            </div>\r\n            <HomeTask8/>\r\n</div>\r\n        </div>)\r\n}\r\n\r\nexport default Junior;","\r\n\r\nexport type StateType = {\r\n    value:string,\r\n\r\n}\r\n// saveState<StateType>(\"test\", {title: \"\"});\r\n\r\n// const state: StateType = restoreState<StateType>(\"test\", {title: \"\"});\r\n\r\n\r\nexport function saveState<T> (key: string, state: T) {\r\n    const stateAsString = JSON.stringify(state);\r\n    localStorage.setItem(key, stateAsString)\r\n}\r\n\r\nexport function restoreState<T>(key: string, defaultState: T) {\r\n    const stateAsString = localStorage.getItem(key);\r\n    if (stateAsString !== null) defaultState = JSON.parse(stateAsString) as T;\r\n    return defaultState;\r\n}","import React from 'react';\r\n\r\n\r\nfunction JuniorPlus(){\r\n    return(\r\n        <div>\r\n            <span>JuniorPlus</span>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default JuniorPlus;","import React from 'react';\r\nimport N from \"./N.module.css\";\r\nimport {NavLink, Route} from \"react-router-dom\";\r\nimport EditableSpan from \"../EditableSpan/EditableSpan\";\r\n\r\n\r\n\r\nfunction Navigation (){\r\n    return(\r\n        <div className={N.dropdown}>\r\n            <button className={N.dropbtn}>МЕНЮ</button>\r\n            <div className={N.dropdown_content}>\r\n                <div className={N.accordion}><NavLink activeClassName={N.active}  to=\"/PreJunior\">PreJunior</NavLink></div>\r\n                <div className={N.accordion}><NavLink activeClassName={N.active} to=\"/Junior\">Junior</NavLink></div>\r\n                <div className={N.accordion}><NavLink activeClassName={N.active} to=\"/Junior+\">Junior+</NavLink></div>\r\n            </div>\r\n        </div>\r\n\r\n\r\n    )\r\n}\r\n\r\nexport default Navigation;","import React, {ChangeEvent, KeyboardEvent, useState} from 'react';\nimport './App.css';\nimport ThirdHometask from \"./common/3Hometask/Third-Hometask\";\nimport {v1} from \"uuid\";\nimport InputNew from \"./common/input/inputNew\";\nimport CheckBoxNew from \"./common/checkBox/CheckBox\";\nimport ButtonNew from \"./common/button/Button\";\nimport {BrowserRouter, HashRouter, NavLink, Route, Switch} from \"react-router-dom\";\nimport PreJunior from \"./common/JuniorsFolder/PreJunior\";\nimport Junior from \"./common/JuniorsFolder/Junior\";\nimport JuniorPlus from \"./common/JuniorsFolder/Junior+\";\nimport N from \"./common/Navigation/N.module.css\";\nimport Navigation from \"./common/Navigation/Navigation\";\n\n\nexport type AppTypes = {\n    id: string,\n    name: string,\n}\n\n\nfunction App() {\n    let [error, setErr] = useState<string | null>(null);\n    let [nNew, setnNew] = useState<string>(\"\");\n    let [newArr, setnewArr] = useState<Array<{ id: string, name: string }>>([]);\n\n\n    function NewElemInNewArr(name: string) {\n        let newElement = {id: v1(), name: name};\n        setnewArr([newElement, ...newArr]);\n    }\n\n\n    function onChangeHandler(e: ChangeEvent<HTMLInputElement>) {\n        setnNew(e.currentTarget.value);\n        setErr(\"sdf\");\n    }\n\n    let onEnter = () => {\n        alert('Функция сработала на энтер!!');\n    }\n    let onClick = () =>{\n\n        if (nNew !== '') {\n            NewElemInNewArr(nNew);\n            setnNew('');\n        }\n    }\n\n    function onKeyPressHandler() {\n        (nNew !== \"\" && NewElemInNewArr(nNew));\n        (nNew !== \"\" && alert('Privet' + ' ' + nNew));\n        setnNew('');\n    }\n\n    return (\n        <div className=\"App\">\n          <HashRouter>\n                <Navigation/>\n                <div>\n                    <Switch>\n                        <Route exact path='/PreJunior' render={() => <PreJunior\n                            onKeyPressHandler={onKeyPressHandler}\n                            onEnter={onEnter}\n                            onChangeHandler={onChangeHandler}\n                            error={error}\n                            nNew={nNew}\n                            setnNew={setnNew}\n                            typeofButton={false}\n                            newArr={newArr}\n                            NewElemInNewArr={NewElemInNewArr}\n                            onClick={onClick}\n\n\n                        />}/>\n                        <Route exact path='/Junior' render={() => <Junior\n\n                        />}/>\n                        <Route exact path='/Junior+' render={() => <JuniorPlus/>}/>\n                    </Switch>\n                </div>\n            </HashRouter>\n        </div>\n    );\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}